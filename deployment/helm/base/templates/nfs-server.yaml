apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
  namespace: {{ .Values.nfsServer.namespace }}
  labels:
  {{- include "base.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.nfsServer.replicas }}
  selector:
    matchLabels:
      role: nfs-server
    {{- include "base.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        role: nfs-server
      {{- include "base.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: nfs-server
        env:
          - name: KUBERNETES_CLUSTER_DOMAIN
            value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.nfsServer.nfsServer.image.repository }}:{{ .Values.nfsServer.nfsServer.image.tag | default "latest" }}
        ports:
          - name: nfs
            containerPort: 2049
          - name: mountd
            containerPort: 20048
          - name: rpcbind
            containerPort: 111
        resources: {{- toYaml .Values.nfsServer.nfsServer.resources | nindent 12 }}
        securityContext:
          privileged: true
---
apiVersion: v1
kind: Service
metadata:
  name: nfs-service
  namespace: {{ .Values.nfsServer.namespace }}
  labels:
  {{- include "base.labels" . | nindent 4 }}
spec:
  type: {{ .Values.nfsServer.type }}
  selector:
    role: nfs-server  # Needs to match the deployment labels above.
  {{- include "base.selectorLabels" . | nindent 4 }}
  ports:
{{ .Values.nfsServer.nfsServer.ports | toYaml | nindent 2 }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: cavern-volume-pv
  namespace: {{ .Values.nfsServer.namespace }}
  labels:
    app: nfs-data
spec:
  claimRef:
    namespace: {{ .Values.skaha.namespace }}
    name: cavern-volume-pvc
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 10Gi
  nfs: 
    # URL for the NFS server
    # Can be accessed at the nfs-server.<nfs-namespace>.svc.cluster.local hostname.
    server: "nfs-service.{{ .Values.nfsServer.namespace }}.svc.cluster.local"
    path: "/"  # Refers to root of /exports folder on the NFS server

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cavern-volume-pvc
  namespace: {{ .Values.skaha.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 5Gi
  selector:
    matchLabels:
      app: nfs-data
