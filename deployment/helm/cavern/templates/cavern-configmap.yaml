apiVersion: v1
kind: ConfigMap
metadata:
  name: cavern-config
  namespace: {{ .Values.skaha.namespace }}
data:
  cadc-registry.properties: |+
    #
    # local authority map
    #
    # <base standardID> = <authority>
  
    ivo://ivoa.net/std/GMS#search-1.0 = {{ .Values.deployment.cavern.gmsID }}
    ivo://ivoa.net/std/GMS#users-1.0 = {{ .Values.deployment.cavern.gmsID }}
    ivo://ivoa.net/std/UMS#users-0.1 = {{ .Values.deployment.cavern.gmsID }}
    ivo://ivoa.net/std/UMS#users-1.0 = {{ .Values.deployment.cavern.gmsID }}
    ivo://ivoa.net/sso#OAuth = {{ .Values.deployment.cavern.oidcURI }}
    ivo://ivoa.net/sso#OpenID = {{ .Values.deployment.cavern.oidcURI }}
  
    http://www.opencadc.org/std/posix#group-mapping-0.1 = {{ .Values.deployment.cavern.posixMapperResourceID }}
    http://www.opencadc.org/std/posix#user-mapping-0.1 = {{ .Values.deployment.cavern.posixMapperResourceID }}
  
    ca.nrc.cadc.reg.client.RegistryClient.baseURL = {{ .Values.deployment.cavern.registryURL }}
  
  cavern.properties: |-
    # service identity
    org.opencadc.cavern.resourceID = {{ .Values.deployment.cavern.resourceID }}

    # base directory for cavern files
    org.opencadc.cavern.filesystem.baseDir = {{ .Values.deployment.cavern.filesystem.dataDir }}

    org.opencadc.cavern.filesystem.subPath = {{ .Values.deployment.cavern.filesystem.subPath }}

    {{- with .Values.deployment.cavern.filesystem.rootOwner }}
    # owner of root node has admin power
    org.opencadc.cavern.filesystem.rootOwner = {{ .adminUsername }}

    # (optional) username, uid, and gid (default) of the root owner
    {{- if .username }}
    org.opencadc.cavern.filesystem.rootOwner.username = {{ .username }}
    {{- end }}

    {{- if .uid }}
    org.opencadc.cavern.filesystem.rootOwner.uid = {{ .uid }}
    {{- end }}

    {{- if .gid }}
    org.opencadc.cavern.filesystem.rootOwner.gid = {{ .gid }}
    {{- end }}

    {{- end }}

    # (optional) keys to generate pre-auth URLs to cavern
    {{- with .Values.deployment.cavern.keys }}
    {{- if .private }}
    org.opencadc.cavern.privateKey = {{ .private }}
    {{- end }}

    {{- if .public }}
    org.opencadc.cavern.publicKey = {{ .public }}
    {{- end }}

    {{- end }}

    {{- with .Values.deployment.cavern.sshfs }}
    # (optional) base directory exposed for sshfs mounts
    # {server}[:{port}]:{path}
    org.opencadc.cavern.sshfs.serverBase = {{ .serverBase }}
    {{- end }}

  catalina.properties: |-
    tomcat.connector.scheme=https
    tomcat.connector.proxyName={{ .Values.deployment.hostname }}
    tomcat.connector.proxyPort=443
    ca.nrc.cadc.auth.PrincipalExtractor.enableClientCertHeader=true
    ca.nrc.cadc.util.Log4jInit.messageOnly=true
    # (default: ca.nrc.cadc.auth.NoOpIdentityManager)
    ca.nrc.cadc.auth.IdentityManager={{ .Values.deployment.cavern.identityManagerClass }}

    # database connection pools
    {{- with .Values.deployment.cavern.uws.db }}
    org.opencadc.cavern.uws.maxActive={{ .maxActive }}
    org.opencadc.cavern.uws.username={{ .username }}
    org.opencadc.cavern.uws.password={{ .password }}
    org.opencadc.cavern.uws.url=jdbc:postgresql://cavern-uws-postgres.{{ $.Values.skaha.namespace }}.svc.{{ $.Values.kubernetesClusterDomain }}:5432/{{ .database }}
    {{- end }}
